<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1/">
  <channel>
    <title>NY64의 무한삽질 블로그</title>
    <link>https://blog.ny64.kr</link>
    <atom:link href="https://blog.ny64.kr/feed.xml" rel="self" type="application/rss+xml" />
    
      <item>
        <title>[Jekyll] Jekyll 블로그에 카카오 애드핏 적용하기</title>
        <description>&lt;p&gt;이번 포스트 에서는 Jekyll 블로그에 카카오 애드핏을 적용하는 방법과 1일 광고 수익에 대해 알아보겠습니다.&lt;/p&gt;

&lt;h2 id=&quot;카카오-애드핏에-사이트-등록하기&quot;&gt;카카오 애드핏에 사이트 등록하기&lt;/h2&gt;

&lt;p&gt;먼저 &lt;strong&gt;&lt;a href=&quot;https://adfit.kakao.com/ad/media&quot;&gt;카카오 애드핏&lt;/a&gt;&lt;/strong&gt;에 접속해 블로그를 등록해야 합니다.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;새 매체&lt;/strong&gt;를 눌러, 사이트를 등록합니다.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://blog.ny64.kr/assets/images/2022-02-25-apply-kakao-adfit-to-jekyll-blog/kakao-adfit.png&quot; alt=&quot;카카오 애드핏&quot; /&gt;
&lt;img src=&quot;https://blog.ny64.kr/assets/images/2022-02-25-apply-kakao-adfit-to-jekyll-blog/add-site.png&quot; alt=&quot;사이트 추가&quot; /&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;매체명:&lt;/strong&gt; 블로그 이름&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;매체유형:&lt;/strong&gt; Web&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;매체 고유값:&lt;/strong&gt; 블로그 URL&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;입력란을 채운 후, 광고단위 등록 버튼을 클릭합니다.&lt;/p&gt;

&lt;p&gt;그럼 카카오에 심사 요청이 완료됩니다.&lt;/p&gt;

&lt;p&gt;카카오 애드핏은 구글 애드센스와는 다르게 웬만하면 심사가 승인되는 편입니다.&lt;/p&gt;

&lt;p&gt;심사 완료까지는 1~3일이 소요됩니다.&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;만약 심사가 보류되었다면, 블로그에 포스트 수가 너무 적어서 그런 경우가 대부분이니&lt;/p&gt;

&lt;p&gt;포스트를 좀 더 채운 후 심사를 요청해보세요.&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h2 id=&quot;블로그에-광고-추가하기&quot;&gt;블로그에 광고 추가하기&lt;/h2&gt;

&lt;p&gt;매체 심사가 승인되었다면, 추가한 매체 설정에 들어가 &lt;strong&gt;새 광고단위&lt;/strong&gt;를 클릭합니다.
&lt;img src=&quot;https://blog.ny64.kr/assets/images/2022-02-25-apply-kakao-adfit-to-jekyll-blog/new-ad.png&quot; alt=&quot;새 광고단위&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;그럼 아래와 같은 화면이 나오는데, 광고 단위명을 입력하고 사이즈를 선택합니다.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;조금이라도 수익을 올리고 싶다면 새로 고침 빈도를 30초로 설정해, 30초마다 새로운 광고가 나오게 하는 것이 좋습니다.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://blog.ny64.kr/assets/images/2022-02-25-apply-kakao-adfit-to-jekyll-blog/image01.png&quot; alt=&quot;새 광고단위 설정&quot; /&gt;&lt;/p&gt;

&lt;p&gt;어떤 기기로 접속하냐에 따라 광고 사이즈를 다르게 보여줘야 하므로, &lt;strong&gt;728x90&lt;/strong&gt;과 &lt;strong&gt;300x250&lt;/strong&gt; 사이즈로 각각 광고단위를 만들어 줍니다.&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;스크립트/SDK 발급&lt;/strong&gt; 버튼을 누르면 아래와 같이 광고단위 코드와 JS 코드가 나옵니다.
&lt;img src=&quot;https://blog.ny64.kr/assets/images/2022-02-25-apply-kakao-adfit-to-jekyll-blog/image02.png&quot; alt=&quot;스크립트/SDK 발급&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;접속하는 기기의 화면 크기에 따라 동적으로 광고를 보여주기 위해 아래의 코드를 복사해서&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;_includes/adfit.html&lt;/code&gt; 파일을 만든 다음 붙여넣어 줍니다.
&lt;img src=&quot;https://blog.ny64.kr/assets/images/2022-02-25-apply-kakao-adfit-to-jekyll-blog/image03.png&quot; alt=&quot;adfit.html&quot; /&gt;&lt;/p&gt;

&lt;div class=&quot;language-html highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;script&amp;gt;&lt;/span&gt;
	&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;window&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;matchMedia&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;( min-width: 1024px )&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;matches&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
		&lt;span class=&quot;nb&quot;&gt;document&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;write&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;
			&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;lt;ins class=&quot;kakao_ad_area&quot; style=&quot;display:none;&quot; data-ad-unit=&quot;728x90 광고단위 코드&quot; data-ad-width=&quot;728&quot; data-ad-height=&quot;90&quot;&amp;gt;&amp;lt;/ins&amp;gt;&amp;lt;script type=&quot;text/javascript&quot; src=&quot;//t1.daumcdn.net/kas/static/ba.min.js&quot; async&amp;gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;/script&amp;gt;&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;
		&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
	&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
	&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;window&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;matchMedia&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;( max-width: 768px )&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;matches&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
		&lt;span class=&quot;nb&quot;&gt;document&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;write&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;
			&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;lt;ins class=&quot;kakao_ad_area&quot; style=&quot;display:none;&quot; data-ad-unit=&quot;300x250 광고단위 코드&quot;&quot; data-ad-width=&quot;300&quot; data-ad-height=&quot;250&quot;&amp;gt;&amp;lt;/ins&amp;gt;&amp;lt;script type=&quot;text/javascript&quot; src=&quot;//t1.daumcdn.net/kas/static/ba.min.js&quot; async&amp;gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;/script&amp;gt;&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;
		&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
	&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/script&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;광고를 포스트 페이지 하단에 표시하기 위해서 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;_layouts\page.html&lt;/code&gt; 파일 하단에 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;% include adfit.html %}&lt;/code&gt; 를 추가해 줍니다.&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h2 id=&quot;광고-적용-확인&quot;&gt;광고 적용 확인&lt;/h2&gt;

&lt;p&gt;다시 블로그에 접속해보면, 포스트 페이지 하단마다 광고가 잘 나오는 것을 확인할 수 있습니다.
&lt;img src=&quot;https://blog.ny64.kr/assets/images/2022-02-25-apply-kakao-adfit-to-jekyll-blog/ad.png&quot; alt=&quot;광고 적용 확인&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h2 id=&quot;광고-적용한-뒤-하루-수익&quot;&gt;광고 적용한 뒤 하루 수익&lt;/h2&gt;

&lt;p&gt;&lt;img src=&quot;https://blog.ny64.kr/assets/images/2022-02-25-apply-kakao-adfit-to-jekyll-blog/image04.png&quot; alt=&quot;하루 수익&quot; /&gt;&lt;/p&gt;

&lt;p&gt;블로그에 광고를 추가한 뒤 하루 수익입니다.&lt;/p&gt;

&lt;p&gt;72원…&lt;/p&gt;

&lt;p&gt;&lt;del&gt;그래도 없는거 보다는 좋으니ㄲ&lt;/del&gt;&lt;/p&gt;

&lt;p&gt;카카오 애드핏은 &lt;strong&gt;5만원&lt;/strong&gt; 이상이 모여야 출금이 가능합니다&lt;/p&gt;

&lt;p&gt;적어도 하루 &lt;strong&gt;138.8원&lt;/strong&gt; 이상이 나와야 1년 모아서 &lt;strong&gt;50000원&lt;/strong&gt;이 나옵니다.&lt;/p&gt;
</description>
        <pubDate>Fri, 25 Feb 2022 00:00:00 +0900</pubDate>
        <link>https://blog.ny64.kr/posts/apply-kakao-adfit-to-jekyll-blog/</link>
        <guid isPermaLink="true">https://blog.ny64.kr/posts/apply-kakao-adfit-to-jekyll-blog/</guid>
      </item>
    
      <item>
        <title>[Oracle] Swap 설정 및 Nginx서버 설치</title>
        <description>&lt;p&gt;&lt;a href=&quot;https://blog.ny64.kr/posts/create-your-own-lifetime-free-server-using-oracle-cloud/&quot;&gt;지난번&lt;/a&gt;에 만든 오라클 평생 무료 서버에 SWAP 설정과 Nginx설치 및 방화벽 설정을 해 봅시다.&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;ssh &lt;span class=&quot;nt&quot;&gt;-i&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'Private KEY'&lt;/span&gt; ubuntu@IP주소
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;서버에 SSH 접속을 합니다.&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h2 id=&quot;swap-설정&quot;&gt;SWAP 설정&lt;/h2&gt;

&lt;p&gt;우리가 만든 평생 무료 서버는 &lt;strong&gt;1GB&lt;/strong&gt;의 RAM을 가지고 있어, 램이 부족한 상황을 예방하기 위해 &lt;strong&gt;4GB&lt;/strong&gt;의 SWAP을 생성해 줍시다.&lt;/p&gt;

&lt;p&gt;이전에 SWAP에 대해 다룬 적이 있기 때문에 이 글에서는 자세한 설명은 생략하겠습니다.&lt;/p&gt;

&lt;p&gt;명령어별 자세한 설명을 원한다면 &lt;a href=&quot;https://blog.ny64.kr/posts/setting-up-swap-on-raspberry-pi/&quot;&gt;이 글&lt;/a&gt;을 참고하시기 바랍니다.&lt;/p&gt;

&lt;p&gt;아래 명령어를 차례대로 실행합니다.&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;fallocate &lt;span class=&quot;nt&quot;&gt;-l&lt;/span&gt; 4G /swapfile
&lt;span class=&quot;nb&quot;&gt;sudo chmod &lt;/span&gt;600 /swapfile
&lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;mkswap /swapfile
&lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;swapon /swapfile
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;br /&gt;
그리고 나서 서버를 재시작해도 설정값이 유지되도록 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;/etc/fstab&lt;/code&gt;을 수정해 줍시다.&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;nano /etc/fstab
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;br /&gt;
제일 하단에 아래 내용을 추가하고 저장합니다.&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;/swapfile swap swap defaults 0 0
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;br /&gt;
이제 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;free -h&lt;/code&gt; 명령어를 사용해 보시면 우리가 설정한 &lt;strong&gt;4GB&lt;/strong&gt;의 SWAP이 잘 잡혀있는걸 확인할 수 있습니다.&lt;/p&gt;
&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;ubuntu@OracleVM:~&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;free &lt;span class=&quot;nt&quot;&gt;-h&lt;/span&gt;
              total        used        free      shared  buff/cache   available
Mem:          972Mi       281Mi       107Mi       0.0Ki       583Mi       553Mi
Swap:         4.0Gi       118Mi       3.9Gi
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h2 id=&quot;nginx-설치&quot;&gt;Nginx 설치&lt;/h2&gt;

&lt;p&gt;24시간 가동되는 오라클 서버에 간단한 웹 서버를 설치해 봅시다.&lt;/p&gt;

&lt;p&gt;업데이트 후 Nginx 웹서버를 설치합니다.&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;apt-get update
&lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;apt-get &lt;span class=&quot;nb&quot;&gt;install &lt;/span&gt;nginx &lt;span class=&quot;nt&quot;&gt;-y&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;br /&gt;
Nginx 서비스가 정상 작동 중인 것을 확인할 수 있습니다.&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;ubuntu@OracleVM:~&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;systemctl status nginx
● nginx.service - A high performance web server and a reverse proxy server
     Loaded: loaded &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;/lib/systemd/system/nginx.service&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; enabled&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; vendor preset: enabled&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
     Active: active &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;running&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; since Mon 2022-01-31 13:44:32 KST&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; 2 weeks 2 days ago
       Docs: man:nginx&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;8&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
   Main PID: 16284 &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;nginx&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
      Tasks: 3 &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;limit: 1110&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
     Memory: 3.1M
     CGroup: /system.slice/nginx.service
             ├─16284 nginx: master process /usr/sbin/nginx &lt;span class=&quot;nt&quot;&gt;-g&lt;/span&gt; daemon on&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; master_process on&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
             ├─16285 nginx: worker process
             └─16286 nginx: worker process

Jan 31 13:44:32 OracleVM systemd[1]: Starting A high performance web server and a reverse proxy server...
Jan 31 13:44:32 OracleVM systemd[1]: Started A high performance web server and a reverse proxy server.
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;혹시나 설치 후 서비스 자동 시작이 안되는 경우는 아래 명령어를 실행해 주세요.&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;systemctl &lt;span class=&quot;nb&quot;&gt;enable &lt;/span&gt;nginx
&lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;systemctl start nginx
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h2 id=&quot;방화벽-설정&quot;&gt;방화벽 설정&lt;/h2&gt;

&lt;p&gt;지금 이 상태에서는 80번 포트가 열려있지 않아 웹 서버에 접속할 수 없습니다.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://cloud.oracle.com/&quot;&gt;오라클 클라우드&lt;/a&gt;에 접속한 뒤&lt;/p&gt;

&lt;p&gt;컴퓨트 &amp;gt; 인스턴트 &amp;gt; 자신의 인스턴트 상세페이지로 이동한 다음 서브넷을 클릭합니다.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://blog.ny64.kr/assets/images/2022-02-16-oracle-cloud-swap-setup-and-nginx-installation/image01.png&quot; alt=&quot;인스턴트 상세페이지&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;
그런 다음 보안 목록을 클릭합니다.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://blog.ny64.kr/assets/images/2022-02-16-oracle-cloud-swap-setup-and-nginx-installation/image02.png&quot; alt=&quot;서브넷 상세페이지&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;
80번 포트에 대한 수신 규칙을 추가합니다.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;소스 CIDR:&lt;/strong&gt; 0.0.0.0/0&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;IP 프로토콜:&lt;/strong&gt; TCP&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;소스 포트 범위:&lt;/strong&gt; 80&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;대상 포트 범위:&lt;/strong&gt; 80&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&quot;https://blog.ny64.kr/assets/images/2022-02-16-oracle-cloud-swap-setup-and-nginx-installation/image03.png&quot; alt=&quot;수신규칙 추가&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;
이제 클라우드 웹 패널에서 할 작업은 모두 끝났고, SSH로 돌아가 아래 명령어로 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;iptables&lt;/code&gt;의 80번 포트를 열어줍시다.&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;iptables &lt;span class=&quot;nt&quot;&gt;-I&lt;/span&gt; INPUT 1 &lt;span class=&quot;nt&quot;&gt;-p&lt;/span&gt; tcp &lt;span class=&quot;nt&quot;&gt;--dport&lt;/span&gt; 80 &lt;span class=&quot;nt&quot;&gt;-j&lt;/span&gt; ACCEPT
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;br /&gt;
방화벽 설정이 정상적으로 적용되었는지 확인을 위해 오라클 클라우드 IP를 주소창에 입력해서 접속해 보세요.&lt;/p&gt;

&lt;p&gt;아래처럼 Nginx 기본 페이지가 나오면 성공입니다.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://blog.ny64.kr/assets/images/2022-02-16-oracle-cloud-swap-setup-and-nginx-installation/image04.png&quot; alt=&quot;Welcome to the nginx&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;
서버에 설치된 Nginx 웹서버를 파일서버, 정적 웹서버, 프록싱 서버 등 다양한 용도로 활용할 수 있습니다.&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;
&lt;blockquote&gt;
  &lt;p&gt;오라클 클라우드 포스트 3편에서는 &lt;strong&gt;SSL 인증서&lt;/strong&gt; 발급 및 자동 갱신과 &lt;strong&gt;Nginx 설정&lt;/strong&gt;에 대해 다뤄보도록 하겠습니다.&lt;/p&gt;
&lt;/blockquote&gt;
</description>
        <pubDate>Wed, 16 Feb 2022 00:00:00 +0900</pubDate>
        <link>https://blog.ny64.kr/posts/oracle-cloud-swap-setup-and-nginx-installation/</link>
        <guid isPermaLink="true">https://blog.ny64.kr/posts/oracle-cloud-swap-setup-and-nginx-installation/</guid>
      </item>
    
      <item>
        <title>[Oracle] 나만의 '평생' 무료 서버 만들기</title>
        <description>&lt;p&gt;오라클에서는 평생 무료 이용 가능한 서버를 제공하고 있습니다.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Google Cloud&lt;/strong&gt;의 평생 무료 서버와 비교해보면 아래와 같습니다.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;오라클 클라우드&lt;/strong&gt;가 CPU, RAM, Disk, Network Outbound 같은 측면에서 &lt;strong&gt;구글 클라우드&lt;/strong&gt;보다 훨씬 우위에 있습니다.&lt;/p&gt;

&lt;p&gt;VM 개수는 &lt;strong&gt;오라클 클라우드&lt;/strong&gt;에선 2개까지 무료이고, &lt;strong&gt;구글 클라우드&lt;/strong&gt;는 개수 제한은 없으나 VM의 사용시간 총합이 월 744시간 까지만 무료입니다. 이는 1개의 VM을 1달 동안 24시간 사용하는 시간과 동일합니다.&lt;/p&gt;

&lt;p&gt;웹 서버로 운영하기 위해선 고정IP가 필요한데 &lt;strong&gt;오라클 클라우드&lt;/strong&gt;는 무료로 고정IP를 할당할 수 있고, &lt;strong&gt;구글 클라우드는&lt;/strong&gt; 사용 시간에 비례하여 유료로 제공합니다.&lt;/p&gt;

&lt;p&gt;결과적으로 &lt;strong&gt;오라클 클라우드&lt;/strong&gt; 성능적인 면과 사용성 모두 우위에 있습니다.&lt;/p&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;비교 대상&lt;/th&gt;
      &lt;th&gt;오라클 클라우드&lt;/th&gt;
      &lt;th&gt;구글 클라우드&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;VM 종류&lt;/td&gt;
      &lt;td&gt;E2.1.Micro&lt;/td&gt;
      &lt;td&gt;f1-micro&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;CPU&lt;/td&gt;
      &lt;td&gt;&lt;strong&gt;&lt;em&gt;OCPU 1/8&lt;/em&gt;&lt;/strong&gt;&lt;/td&gt;
      &lt;td&gt;vCPU 1&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;RAM&lt;/td&gt;
      &lt;td&gt;&lt;strong&gt;&lt;em&gt;1GB&lt;/em&gt;&lt;/strong&gt;&lt;/td&gt;
      &lt;td&gt;614MB&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Disk&lt;/td&gt;
      &lt;td&gt;&lt;strong&gt;&lt;em&gt;최대 100GB&lt;/em&gt;&lt;/strong&gt;&lt;/td&gt;
      &lt;td&gt;30GB 까지 무료&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Network Out&lt;/td&gt;
      &lt;td&gt;&lt;strong&gt;&lt;em&gt;10TB&lt;/em&gt;&lt;/strong&gt;&lt;/td&gt;
      &lt;td&gt;1GB&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;사용 기간&lt;/td&gt;
      &lt;td&gt;&lt;strong&gt;&lt;em&gt;평생&lt;/em&gt;&lt;/strong&gt;&lt;/td&gt;
      &lt;td&gt;744시간/월&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;VM 지역&lt;/td&gt;
      &lt;td&gt;&lt;strong&gt;&lt;em&gt;지역 제한 없음&lt;/em&gt;&lt;/strong&gt;&lt;/td&gt;
      &lt;td&gt;us-west1, us-central1, us-east1&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;공인 IP&lt;/td&gt;
      &lt;td&gt;&lt;strong&gt;&lt;em&gt;고정IP 무료&lt;/em&gt;&lt;/strong&gt;&lt;/td&gt;
      &lt;td&gt;고정 IP 유료&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;OS&lt;/td&gt;
      &lt;td&gt;Linux 배포판 무료&lt;/td&gt;
      &lt;td&gt;=&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;관련 문서&lt;/td&gt;
      &lt;td&gt;구글에 비해 빈약함&lt;/td&gt;
      &lt;td&gt;&lt;strong&gt;&lt;em&gt;풍부&lt;/em&gt;&lt;/strong&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;기술 지원&lt;/td&gt;
      &lt;td&gt;&lt;strong&gt;&lt;em&gt;실시간 채팅 가능 (영어)&lt;/em&gt;&lt;/strong&gt;&lt;/td&gt;
      &lt;td&gt;불가능&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Cloud UI 사용성&lt;/td&gt;
      &lt;td&gt;Web UI&lt;/td&gt;
      &lt;td&gt;&lt;strong&gt;&lt;em&gt;Web UI (오라클에 비해 직관적)&lt;/em&gt;&lt;/strong&gt;&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h2 id=&quot;oracle-cloud-평생-무료-vps-만들기&quot;&gt;Oracle Cloud 평생 무료 VPS 만들기&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://www.oracle.com/kr/cloud/free/&quot;&gt;Oracle Cloud 홈페이지&lt;/a&gt;에 게시된 무료 조건은 아래와 같습니다.&lt;/p&gt;

&lt;p&gt;&lt;del&gt;AWS를 비교 대상으로 삼고 있네요&lt;/del&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://blog.ny64.kr/assets/images/2022-01-31-create-your-own-lifetime-free-server-using-oracle-cloud/oracle-cloud-main-img.png&quot; alt=&quot;상시 무료 클라우드&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h3 id=&quot;oracle-cloud-계정-생성&quot;&gt;Oracle Cloud 계정 생성&lt;/h3&gt;

&lt;p&gt;먼저 &lt;a href=&quot;https://signup.cloud.oracle.com/&quot;&gt;여기&lt;/a&gt;에서 계정을 만들어줘야 합니다.&lt;/p&gt;

&lt;p&gt;게정 생성 시 본인인증을 위한 &lt;strong&gt;신용카드 등록&lt;/strong&gt;이 필요하며, 유효성을 확인하기 위해 1원 결제 후 바로 취소가 됩니다.&lt;/p&gt;

&lt;p&gt;유료 VM을 사용하지 않는 한 결제가 되는 일은 없습니다.&lt;/p&gt;

&lt;p&gt;계정 생성시 선택하는 VM Region은 &lt;strong&gt;한번 선택&lt;/strong&gt;하면 &lt;strong&gt;변경할 수 없으니&lt;/strong&gt; 신중하게 선택해야 합니다.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;저는 서울은 사용자가 너무 많을 거 같아 &lt;strong&gt;대한민국/춘천&lt;/strong&gt;으로 선택했습니다.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h3 id=&quot;vm-instance-생성&quot;&gt;VM Instance 생성&lt;/h3&gt;

&lt;p&gt;회원가입을 완료한 뒤, &lt;a href=&quot;https://cloud.oracle.com/&quot;&gt;Oracle Cloud&lt;/a&gt;에 접속해 &lt;strong&gt;VM 인스턴스 생성&lt;/strong&gt;을 클릭합니다.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://blog.ny64.kr/assets/images/2022-01-31-create-your-own-lifetime-free-server-using-oracle-cloud/make-vm.jpg&quot; alt=&quot;오라클 클라우드 메인 페이지&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;
다음과 같이 &lt;strong&gt;VM 인스턴스를&lt;/strong&gt; 생성합니다.&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;VM 이름 입력&lt;/li&gt;
  &lt;li&gt;OS 선택 (Oracle Linux 기본, Ubuntu 선택 가능)&lt;/li&gt;
  &lt;li&gt;SSH 키 저장&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;img src=&quot;https://blog.ny64.kr/assets/images/2022-01-31-create-your-own-lifetime-free-server-using-oracle-cloud/make-vm-2.jpg&quot; alt=&quot;VM Instance 생성&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h2 id=&quot;생성-확인-및-ssh-접속&quot;&gt;생성 확인 및 SSH 접속&lt;/h2&gt;

&lt;p&gt;VM 생성이 완료되었다면 &lt;a href=&quot;https://cloud.oracle.com/compute/instances&quot;&gt;여기&lt;/a&gt;에서 VM 정보를 확인할 수 있습니다.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://blog.ny64.kr/assets/images/2022-01-31-create-your-own-lifetime-free-server-using-oracle-cloud/vm-info.png&quot; alt=&quot;VM 정보 확인&quot; /&gt;&lt;/p&gt;

&lt;p&gt;VM Instance를 생성할 때 다운받았던 &lt;strong&gt;SSH 키&lt;/strong&gt;를 이용해 &lt;strong&gt;인스턴스 엑세스 항목&lt;/strong&gt;에 있는 IP로 접속합니다&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;ssh &lt;span class=&quot;nt&quot;&gt;-i&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'다운받은 Private KEY'&lt;/span&gt; ubuntu@IP주소
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;br /&gt;
아래와 같이 &lt;strong&gt;1GB RAM&lt;/strong&gt;과 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;/dev/sda1&lt;/code&gt;에 마운트된 &lt;strong&gt;50GB 스토리지&lt;/strong&gt;를 확인할 수 있습니다.&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;ubuntu@OracleVM:~&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;free &lt;span class=&quot;nt&quot;&gt;-h&lt;/span&gt;
              total        used        free      shared  buff/cache   available
Mem:          972Mi       141Mi        98Mi       1.0Mi       732Mi       698Mi
Swap:         4.0Gi       1.0Mi       4.0Gi

ubuntu@OracleVM:~&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;df
&lt;/span&gt;Filesystem     1K-blocks    Used Available Use% Mounted on
udev              473868       0    473868   0% /dev
tmpfs              99548    1000     98548   2% /run
/dev/sda1       47156192 5928456  41211352  13% /
tmpfs             497736       0    497736   0% /dev/shm
tmpfs               5120       0      5120   0% /run/lock
tmpfs             497736       0    497736   0% /sys/fs/cgroup
/dev/loop0         56832   56832         0 100% /snap/core18/2253
/dev/loop1         59520   59520         0 100% /snap/oracle-cloud-agent/26
/dev/loop2         43264   43264         0 100% /snap/snapd/14066
/dev/sda15        106858    5321    101537   5% /boot/efi
/dev/loop3         56960   56960         0 100% /snap/core18/2284
/dev/loop4         44544   44544         0 100% /snap/snapd/14549
/dev/loop5         59904   59904         0 100% /snap/oracle-cloud-agent/30
tmpfs              99544       0     99544   0% /run/user/1001
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;
&lt;blockquote&gt;
  &lt;p&gt;다음 포스트에서는 &lt;strong&gt;SWAP 설정, Nginx 웹서버 설치, 방화벽 설정&lt;/strong&gt; 등에 대해 다뤄보도록 하겠습니다.&lt;/p&gt;
&lt;/blockquote&gt;
</description>
        <pubDate>Mon, 31 Jan 2022 00:00:00 +0900</pubDate>
        <link>https://blog.ny64.kr/posts/create-your-own-lifetime-free-server-using-oracle-cloud/</link>
        <guid isPermaLink="true">https://blog.ny64.kr/posts/create-your-own-lifetime-free-server-using-oracle-cloud/</guid>
      </item>
    
      <item>
        <title>[Ubuntu] 우분투에서 디스코드 화면공유 문제 해결하기</title>
        <description>&lt;p&gt;우분투에서 디스코드 화면공유를 하려고 하면 검은 화면만 나오는 문제가 있다.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;우분투 21.04&lt;/strong&gt; 이상의 &lt;strong&gt;Wayland에서&lt;/strong&gt; 일부 프로그램들에 한해서 화면공유가 불가능한 문제이다.&lt;/p&gt;

&lt;p&gt;디스코드 측에서 업데이트를 해주기 전까진 아래 방법을 통해 &lt;strong&gt;Wayland를&lt;/strong&gt; 비활성화해 해결할 수 있다.&lt;/p&gt;

&lt;h2 id=&quot;문제-해결&quot;&gt;문제 해결&lt;/h2&gt;

&lt;p&gt;GDM3 설정파일을 연 다음, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;#WaylandEnable=false&lt;/code&gt;의 주석을 제거하고 저장한다.&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;nano /etc/gdm3/custom.conf
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;div class=&quot;language-conf highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c&quot;&gt;# GDM configuration storage
#
# See /usr/share/gdm/gdm.schemas for a list of available options.
&lt;/span&gt;
[&lt;span class=&quot;n&quot;&gt;daemon&lt;/span&gt;]
&lt;span class=&quot;c&quot;&gt;# Uncomment the line below to force the login screen to use Xorg
&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;WaylandEnable&lt;/span&gt;=&lt;span class=&quot;n&quot;&gt;false&lt;/span&gt; &lt;span class=&quot;c&quot;&gt;# Wayland 비활성화
&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;# Enabling automatic login
#  AutomaticLoginEnable = true
#  AutomaticLogin = user1
&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;# Enabling timed login
#  TimedLoginEnable = true
#  TimedLogin = user1
#  TimedLoginDelay = 10
&lt;/span&gt;...
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;설정파일 변경한것을 반영해준다.&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;dpkg-reconfigure gdm3
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;이제 재부팅을 하거나 로그아웃 후 다시 로그인하면 문제가 해결된다.&lt;/p&gt;
</description>
        <pubDate>Fri, 21 Jan 2022 00:00:00 +0900</pubDate>
        <link>https://blog.ny64.kr/posts/fix-discord-screen-share-problem-in-ubuntu/</link>
        <guid isPermaLink="true">https://blog.ny64.kr/posts/fix-discord-screen-share-problem-in-ubuntu/</guid>
      </item>
    
      <item>
        <title>[RPI] 라즈베리파이로 FM 라디오 방송국 만들기</title>
        <description>&lt;p&gt;이번에는 라즈베리파이로 간단하게 FM 라디오 송신기를 만들어 보겠습니다.&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;
&lt;strong&gt;준비물&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;라즈베리파이&lt;/li&gt;
  &lt;li&gt;점퍼선 1개 (암암 또는 암수)&lt;/li&gt;
  &lt;li&gt;라디오&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;점퍼선-연결&quot;&gt;점퍼선 연결&lt;/h2&gt;

&lt;p&gt;안테나 역할을 할 점퍼선을 &lt;strong&gt;GPIO 4번핀&lt;/strong&gt;(7번째 핀) 에 연결합니다.
&lt;img src=&quot;https://docs.microsoft.com/en-us/dotnet/iot/media/gpio-pinout-diagram.png&quot; alt=&quot;Raspberry PI GPIO Pin Map&quot; /&gt;
&lt;img src=&quot;https://blog.ny64.kr/assets/images/2021-12-18-create-an-fm-radio-station-with-raspberry-pi/raspberrypi-gpio-pin.jpg&quot; alt=&quot;Raspberry PI GPIO Pin&quot; width=&quot;75%&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h2 id=&quot;프로그램-설치&quot;&gt;프로그램 설치&lt;/h2&gt;

&lt;p&gt;점퍼선을 연결한 다음 이제 FM 송출을 할 수 있는 프로그램을 설치합시다.&lt;/p&gt;

&lt;p&gt;만약 OS가 라즈비안이 아니라 우분투라면 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;sudo apt-get install libraspberrypi-dev&lt;/code&gt; 명령어를 추가로 실행해 주세요.&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;apt-get update
&lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;apt-get &lt;span class=&quot;nb&quot;&gt;install &lt;/span&gt;make build-essential
&lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;apt-get &lt;span class=&quot;nb&quot;&gt;install &lt;/span&gt;sox libsox-fmt-mp3
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;깃허브에서 레파지토리를 클론한 다음, 실행 파일을 빌드해 줍시다.&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;git clone https://github.com/markondej/fm_transmitter
&lt;span class=&quot;nb&quot;&gt;cd &lt;/span&gt;fm_transmitter
make
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h2 id=&quot;라디오-송술&quot;&gt;라디오 송술&lt;/h2&gt;

&lt;p&gt;라즈베리파이에 송출할 &lt;strong&gt;무압축 WAV 형식&lt;/strong&gt; 파일을 라즈베리파이로 전송해 줍니다.&lt;/p&gt;

&lt;p&gt;만약 MP3 파일이라면 아래 명령어를 사용해 변환해 주세요.&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;sox mp3파일.mp3 &lt;span class=&quot;nt&quot;&gt;-r&lt;/span&gt; 22050 &lt;span class=&quot;nt&quot;&gt;-c&lt;/span&gt; 1 &lt;span class=&quot;nt&quot;&gt;-b&lt;/span&gt; 16 &lt;span class=&quot;nt&quot;&gt;-t&lt;/span&gt; wav wav파일.wav
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;이제 아래 명령어로 FM 라디오를 송출을 시작합니다.&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c&quot;&gt;# 97.7 Mhz로 wav파일.wav 송출&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;sudo&lt;/span&gt; ./fm_transmitter &lt;span class=&quot;nt&quot;&gt;-f&lt;/span&gt; 97.7 &lt;span class=&quot;nt&quot;&gt;-r&lt;/span&gt; wav파일.wav
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;위처럼 실행한 다음 라디오로 주파수를 맞춰보면 라디오에서 음악이 재생되는 것을 확인할 수 있습니다.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://blog.ny64.kr/assets/images/2021-12-18-create-an-fm-radio-station-with-raspberry-pi/radio_app.jpg&quot; alt=&quot;Radio App&quot; width=&quot;50%&quot; /&gt;&lt;/p&gt;
</description>
        <pubDate>Sat, 18 Dec 2021 00:00:00 +0900</pubDate>
        <link>https://blog.ny64.kr/posts/create-an-fm-radio-station-with-raspberry-pi/</link>
        <guid isPermaLink="true">https://blog.ny64.kr/posts/create-an-fm-radio-station-with-raspberry-pi/</guid>
      </item>
    
      <item>
        <title>[Ubuntu] Asus 비보북 14 우분투 설치기</title>
        <description>&lt;p&gt;시작하기에 앞서, 이 글은 &lt;strong&gt;우분투 설치법에 대한 글이 아닙니다&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;단지 제 노트북인 &lt;strong&gt;Asus 비보북14&lt;/strong&gt; 에서만 발생하는 문제 해별법을 설명해둔 글입니다&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;이 글은 계속 업데이트될 예정입니다&lt;/strong&gt;&lt;/p&gt;

&lt;h2 id=&quot;ubuntu--windows&quot;&gt;Ubuntu &amp;gt; Windows&lt;/h2&gt;

&lt;p&gt;&lt;img src=&quot;https://blog.ny64.kr/assets/images/2021-12-04-install-ubuntu-on-asus-vivobook-14/windows-meme.png&quot; alt=&quot;윈도우 업데이트 짤&quot; width=&quot;40%&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h2 id=&quot;no-wifi-adapter-found-문제&quot;&gt;No Wifi Adapter Found 문제&lt;/h2&gt;

&lt;p&gt;노트북(Asus 비보북 14)에 우분투를 설치하고 보니, 아래와 같이 &lt;strong&gt;No Wifi Adapter Found&lt;/strong&gt; 라는 말과 함께 와이파이 어댑터를 찾지 못하고 있었습니다&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://blog.ny64.kr/assets/images/2021-12-04-install-ubuntu-on-asus-vivobook-14/ubuntu-no-wifi.png&quot; alt=&quot;No Wifi Adapter Found&quot; width=&quot;80%&quot; /&gt;&lt;/p&gt;

&lt;p&gt;이 문제를 해결하기 위해 몇 주 동안 삽질을 해보았지만 결국 해결하지 못해서 할 수 없이 다이소에서 산 5,000원짜리 USB형 WiFi 동글을 사용해 인터넷을 사용하던 중이었습니다&lt;/p&gt;

&lt;p&gt;&lt;del&gt;오늘도 어김없이&lt;/del&gt; 와이파이 문제에 대해 구글링을 하고 있던 와중에 &lt;strong&gt;윈도우에서 빠른 시작을 비활성화&lt;/strong&gt;하면 해결된다는 한 게시물을 발견했습니다&lt;/p&gt;

&lt;p&gt;혹시 몰라 한번 시도해 봤더니 문제가 바로 해결되었습니다&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;이 문제는 어이없을 정도로 간단하게 해결할 수 있습니다&lt;/p&gt;

&lt;p&gt;윈도우와 우분투를 듀얼부팅으로 사용 중인 겅우, 윈도우 설정에서 빠른 시작 옵션을 비활성화해주면 됩니다&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;제어판 &amp;gt; 전원 옵션 &amp;gt; 전원 단추 작동 설정&lt;/strong&gt; 순으로 들어간 다음에&lt;/p&gt;

&lt;p&gt;현재 사용할 수 없는 설정 변경을 클릭하고, 종료 설정에 빠른 시작 켜기 체크를 해제합니다&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://blog.ny64.kr/assets/images/2021-12-04-install-ubuntu-on-asus-vivobook-14/windows-setting.png&quot; alt=&quot;윈도우 빠른시작 비활성화&quot; width=&quot;68%&quot; /&gt;&lt;/p&gt;

&lt;p&gt;이제 다시 우분투로 부팅하면 와이파이가 작동합니다&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h2 id=&quot;충전기-연결-시-밝기-초기화-문제&quot;&gt;충전기 연결 시 밝기 초기화 문제&lt;/h2&gt;

&lt;p&gt;충전기를 연결 / 해제시 노트북의 &lt;strong&gt;밝기가 0으로 초기화&lt;/strong&gt;되는 문제가 있습니다&lt;/p&gt;

&lt;p&gt;아래 명령어를 실행해서 관련 서비스를 종료시키면 해결됩니다&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;systemctl stop systemd-backlight@backlight:acpi_video1.service
&lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;systemctl disable systemd-backlight@backlight:acpi_video1.service
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;재부팅 시 종료시킨 서비스가 다시 살아남으로 시작 프로그램에 등록합시다&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h2 id=&quot;배터리-충전-제한&quot;&gt;배터리 충전 제한&lt;/h2&gt;

&lt;p&gt;이건 문제 해결법은 아니지만, 인터넷에 제대로된 방법이 나와있지 않아 추가합니다&lt;/p&gt;

&lt;p&gt;배터리 수명을 늘리기 위해 80% 충전 제한을 설정하는 기능입니다&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;crontab &lt;span class=&quot;nt&quot;&gt;-e&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Crontab에 다음 명령어를 추가합니다&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;@reboot echo 80 | sudo tee /sys/class/power_supply/BAT0/charge_control_end_threshold &lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h2 id=&quot;키보드-fn키-동작-문제&quot;&gt;키보드 FN키 동작 문제&lt;/h2&gt;

&lt;p&gt;일부 키보드에서 FN(F1 ~ F12) 키가 화면 밝기 조절 등 단축키로만 작동해서 FN 키를 사용할 수 없는 문제가 있습니다&lt;/p&gt;

&lt;p&gt;간단하게 아래 명령어 실행으로 해결됩니다&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nb&quot;&gt;echo &lt;/span&gt;0 | &lt;span class=&quot;nb&quot;&gt;sudo tee&lt;/span&gt; /sys/module/hid_apple/parameters/fnmode
&lt;span class=&quot;nb&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;options hid_apple fnmode=0&quot;&lt;/span&gt; | &lt;span class=&quot;nb&quot;&gt;sudo tee&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-a&lt;/span&gt; /etc/modprobe.d/hid_apple.conf
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
</description>
        <pubDate>Sat, 04 Dec 2021 00:00:00 +0900</pubDate>
        <link>https://blog.ny64.kr/posts/install-ubuntu-on-asus-vivobook-14/</link>
        <guid isPermaLink="true">https://blog.ny64.kr/posts/install-ubuntu-on-asus-vivobook-14/</guid>
      </item>
    
      <item>
        <title>[RPI] 2FA인증으로 SSH 보안 강화하기 (2)</title>
        <description>&lt;p&gt;지난 포스트 에서는 Fail2ban을 사용해 라즈베리파이의 SSH 보안을 강화해 봤습니다.&lt;/p&gt;

&lt;p&gt;이번에는 Fail2ban에 이어 OTP 인증으로 SSH 보안을 강화해 봅시다.&lt;/p&gt;

&lt;h2 id=&quot;google-authenticator-설치&quot;&gt;Google Authenticator 설치&lt;/h2&gt;

&lt;p&gt;우리가 사용할 OTP 서비스는 Google의 Authenticator입니다.&lt;/p&gt;

&lt;p&gt;아래 명령어로 설치 해 줍시다.&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;apt-get &lt;span class=&quot;nb&quot;&gt;install &lt;/span&gt;libpam-google-authenticator
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h2 id=&quot;otp-설정&quot;&gt;OTP 설정&lt;/h2&gt;

&lt;blockquote&gt;
  &lt;p&gt;&lt;strong&gt;&lt;em&gt;진행 하기 전에 만약 루트 게정으로 로그인되어 있다면 SSH를 사용할 사용자 계정으로 로그인 해야 합니다.&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;아래 명령어로 설치 프로그램을 실행해 줍니다.&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;google-authenticator
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;조금 기다리면 아래와 같이 &lt;strong&gt;Time based&lt;/strong&gt;인 인증을 사용할 것인지 물어보는데, &lt;strong&gt;Y&lt;/strong&gt;를 입력해 줍니다.&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;Do you want authentication tokens to be time-based &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;y/n&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;그럼 아래와 같이 QR코드와 복구 코드가 나옵니다.&lt;/p&gt;

&lt;p&gt;이 정보는 다시 확인할 수 없으니, 안전한 곳에 기록해 줍시다.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://blog.ny64.kr/assets/images/2021-10-27-setting-up-ssh-otp-on-raspberry-pi\otp-setting.png&quot; alt=&quot;OTP 설정 화면&quot; width=&quot;95%&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h3 id=&quot;otp-등록하기&quot;&gt;OTP 등록하기&lt;/h3&gt;

&lt;p&gt;OTP 코드를 생성하기 위해서는 코드를 생성해주는 앱이 필요합니다.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://apps.apple.com/us/app/google-authenticator/id388497605&quot;&gt;Apple App Store&lt;/a&gt;&lt;/strong&gt;나 &lt;strong&gt;&lt;a href=&quot;https://play.google.com/store/apps/details?id=com.google.android.apps.authenticator2&quot;&gt;Google Play Store&lt;/a&gt;&lt;/strong&gt;에서 Google Authenticator 앱을 설치합니다.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://blog.ny64.kr/assets/images/2021-10-27-setting-up-ssh-otp-on-raspberry-pi/app-store.png&quot; alt=&quot;Google Authenticator 설치화면&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;앱을 실행하면 아래와 같은 화면이 나올텐데, &lt;strong&gt;Scan QR code&lt;/strong&gt;를 눌러 아까 콘솔에 출력된 QR코드를 스캔합니다.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://blog.ny64.kr/assets/images/2021-10-27-setting-up-ssh-otp-on-raspberry-pi/otp-inapp-screen.png&quot; alt=&quot;Google Authenticator 실행 후 화면&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;그러면 아래와 같이 OTP가 등록된 것을 확인할 수 있습니다&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://blog.ny64.kr/assets/images/2021-10-27-setting-up-ssh-otp-on-raspberry-pi/otp-after-qr-scan-screen.png&quot; alt=&quot;Google Authenticator OTP 등록 후 화면&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h3 id=&quot;서버측-설정&quot;&gt;서버측 설정&lt;/h3&gt;

&lt;p&gt;이제 서버측에서 해야 할 설정을 해봅시다.&lt;/p&gt;

&lt;p&gt;아까 QR코드가 나왔던 콘솔을 보면 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;.google_authenticator&lt;/code&gt; 파일을 추가할 것인지 물어봅니다.&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;Do you want me to update your &lt;span class=&quot;s2&quot;&gt;&quot;/.google_authenticator&quot;&lt;/span&gt; file? &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;y/n&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;이 파일이 없으면 OTP가 작동을 하지 않으니 &lt;strong&gt;Y&lt;/strong&gt;를 입력해 줍니다.&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;Do you want to disallow multiple uses of the same authentication token? This restricts you to one login about every 30s,
but it increases your chances to notice or even prevent man-in-the-middle attacks (y/n)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;여러 사용자가 하나의 코드를 가지고 인증하는 것을 비활성화 할것인지 선택하는 설정입니다.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Man-in-the-middle attack (코드를 탈취해서 사용하는 공격)&lt;/strong&gt;을 막아주니 &lt;strong&gt;Y&lt;/strong&gt;를 입력해 기능을 비활성화 하는 것을 추천합니다.&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;By default, a new token is generated every 30 seconds by the mobile app. In order to compensate for possible time-skew
between the client and the server, we allow an extra token before and after the current time.
This allows for a time skew of up to 30 seconds between authentication server and client.
If you experience problems with poor time synchronization, you can increase the window from its default size of 3 permitted
codes (one previous code, the current code, the next code) to 17 permitted codes (the 8 previous codes, the current code, and the 8 next codes).
This will permit for a time skew of up to 4 minutes between client and server. Do you want to do so? (y/n)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;OTP 토큰은 30초마다 초기화 되지만 서버의 시간 동기화 문제로 토큰 주기가 안 맞는 상황이 발생할 수 있으니,&lt;/p&gt;

&lt;p&gt;이런 현상을 방지하기 위해 이전 코드와 다음 코드로도 인증이 가능하게 설정하는 항목입니다.&lt;/p&gt;

&lt;p&gt;보안을 위해서라면 사용하지 않는 것을 추천합니다.&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;If the computer that you are logging into isn't hardened against brute-force login attempts, you can enable rate-limiting
for the authentication module. By default, this limits attackers to no more than 3 login attempts every 30s.
Do you wantto enable rate-limiting? (y/n)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;사용자가 코드를 3번 이상 틀리면 차단하는 기능입니다.&lt;/p&gt;

&lt;p&gt;자신이 원하는 대로 설정하면 됩니다.&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h3 id=&quot;ssh-설정&quot;&gt;SSH 설정&lt;/h3&gt;

&lt;p&gt;이제 SSH에서 OTP 인증을 사용할 수 있도록 설정합시다.&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;nano /etc/pam.d/sshd
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;설정 파일을 열고, 아래로 내리다 보면 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;@include common-password&lt;/code&gt;가 보일겁니다.&lt;/p&gt;

&lt;p&gt;바로 밑에 아래 항목을 추가해 줍니다.&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;auth required pam_google_authenticator.so
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;nano /etc/ssh/sshd_config
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;그런 다음 SSH 설정파일을 열고, 아래 항목을 찾아 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;yes&lt;/code&gt;로 바꿔줍니다.&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;ChallengeResponseAuthentication no
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;service sshd restart
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;이제 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;sshd&lt;/code&gt;를 재시작 합니다.&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h2 id=&quot;작동-확인&quot;&gt;작동 확인&lt;/h2&gt;

&lt;p&gt;이제 다시 서버에 SSH로 접속해봅시다.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Password&lt;/strong&gt;를 물어본 다음 &lt;strong&gt;Verification code&lt;/strong&gt;를 물어본다면 성공입니다.&lt;/p&gt;

&lt;p&gt;아까 설정한 OTP앱의 코드를 입력하면 로그인이 됩니다.&lt;/p&gt;
</description>
        <pubDate>Wed, 27 Oct 2021 00:00:00 +0900</pubDate>
        <link>https://blog.ny64.kr/posts/setting-up-ssh-otp-on-raspberry-pi/</link>
        <guid isPermaLink="true">https://blog.ny64.kr/posts/setting-up-ssh-otp-on-raspberry-pi/</guid>
      </item>
    
      <item>
        <title>[RPI] Fail2ban으로 SSH 보안 강화하기 (1)</title>
        <description>&lt;p&gt;만약 라즈베리파이를 서버로 쓰고, 외부와 연결되어 있다면 혹시나 모를 &lt;strong&gt;Brute-force&lt;/strong&gt; 혹은 &lt;strong&gt;무차별 대입 공격&lt;/strong&gt;으로 인한 피해 사고를 예방하기 위해&lt;/p&gt;

&lt;p&gt;Fail2ban의 설치와 사용법을 알아봅시다.&lt;/p&gt;

&lt;h2 id=&quot;fail2ban의-필요성&quot;&gt;Fail2ban의 필요성&lt;/h2&gt;

&lt;p&gt;설치에 앞서 먼저 Fail2ban의 필요성을 알아봅시다.&lt;/p&gt;

&lt;p&gt;만약 라즈베리파이가 외부 네트워크에 연결되어 있다면 아래 명령어를 한번 실행해 보세요.&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;journalctl &lt;span class=&quot;nt&quot;&gt;-f&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;img src=&quot;https://blog.ny64.kr/assets/images/2021-10-24-setting-up-fail2ban-on-raspberry-pi/journalctl -f.png&quot; alt=&quot;journalctl -f 실행 결과&quot; width=&quot;100%&quot; /&gt;&lt;/p&gt;

&lt;p&gt;저는 이미 &lt;strong&gt;Fail2ban&lt;/strong&gt;과 &lt;strong&gt;OTP&lt;/strong&gt; 설정이 완료되어 있어 로그인 시도는 보이지 않지만, 이러한 보안 설정이 되어있지 않을 경우에는&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Failed password for XXX from X.X.X.X port XXX&lt;/code&gt; 이러한 식으로 &lt;strong&gt;무차별 대입 공격 시도&lt;/strong&gt;가 수없이 들어오는 것을 확인할 수 있습니다.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&lt;del&gt;글로벌한 내 서버!&lt;/del&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Fail2ban이 이러한 SSH 로그인 시도를 필터를 통해 걸러주고, 자동으로 차단 해주는 역할을 합니다.&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h2 id=&quot;설치&quot;&gt;설치&lt;/h2&gt;

&lt;p&gt;아래 명령어로 fail2ban을 설치해 줍니다.&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;apt-get &lt;span class=&quot;nb&quot;&gt;install &lt;/span&gt;fail2ban
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;설치가 완료되면 자동으로 서비스를 시작하지만 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;sudo service fail2ban status&lt;/code&gt; 명령어를 통해 실행 중인지 확인할 수 있습니다.&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h2 id=&quot;설정&quot;&gt;설정&lt;/h2&gt;

&lt;p&gt;아래 명령어를 통해 새로운 파일을 생성합니다&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;nano /etc/fail2ban/jail.local
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;아래 내용을 보고 원하는 데로 수정한 후 저장합니다.&lt;/p&gt;

&lt;p&gt;만약 SSH에서 22번이 아닌 다른 포트로 변경하였다면 마지막 부분에 port도 변경해 줘야 합니다.&lt;/p&gt;

&lt;div class=&quot;language-ini highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nn&quot;&gt;[DEFAULT]&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;# findtime동안 maxretry의 로그인 시도가 있는 IP를 bantime만큼 차단
&lt;/span&gt;&lt;span class=&quot;py&quot;&gt;findtime&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;1d&lt;/span&gt;

&lt;span class=&quot;c&quot;&gt;# 로그인 시도 허용 횟수
&lt;/span&gt;&lt;span class=&quot;py&quot;&gt;maxretry&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;5&lt;/span&gt;

&lt;span class=&quot;c&quot;&gt;# 차단 기간 (-1은 영구차단)
&lt;/span&gt;&lt;span class=&quot;py&quot;&gt;bantime&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;1w&lt;/span&gt;

&lt;span class=&quot;py&quot;&gt;backend&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;systemd&lt;/span&gt;

&lt;span class=&quot;c&quot;&gt;# 이메일 알림 설정
&lt;/span&gt;&lt;span class=&quot;py&quot;&gt;destemail&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt;
&lt;span class=&quot;py&quot;&gt;sendername&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt;
&lt;span class=&quot;py&quot;&gt;mta&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;sendmail&lt;/span&gt;

&lt;span class=&quot;c&quot;&gt;# IP 화이트리스트 (이 IP 대역은 절대 차단당하지 않음)
&lt;/span&gt;&lt;span class=&quot;py&quot;&gt;ignoreip&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;127.0.0.1/8 192.168.0.0/24&lt;/span&gt;

&lt;span class=&quot;nn&quot;&gt;[sshd]&lt;/span&gt;
&lt;span class=&quot;py&quot;&gt;enabled&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;true&lt;/span&gt;
&lt;span class=&quot;py&quot;&gt;port&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;22&lt;/span&gt;
&lt;span class=&quot;py&quot;&gt;filter&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;sshd&lt;/span&gt;
&lt;span class=&quot;py&quot;&gt;logpath&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;/var/log/fail2ban-ssh.log&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;라즈베리파이를 재부팅 하거나, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;sudo service fail2ban restart&lt;/code&gt; 명령어를 통해 변경 사항을 적용해 줍니다.&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h2 id=&quot;사용법&quot;&gt;사용법&lt;/h2&gt;

&lt;p&gt;이 포스트에서는 간단한 사용법만 소개하니, 더 자세한 사용법을 알고 싶으신 분들은 &lt;a href=&quot;https://www.fail2ban.org/wiki/index.php/Main_Page&quot;&gt;여기&lt;/a&gt;를 참고해 주시길 바랍니다.&lt;/p&gt;

&lt;h3 id=&quot;차단된-ip-목록-보기&quot;&gt;차단된 IP 목록 보기&lt;/h3&gt;

&lt;p&gt;아래 명령어를 통해 sshd 필터에 차단된 IP들을 확인할 수 있습니다.&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;fail2ban-client status sshd
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;ip-차단-해제&quot;&gt;IP 차단 해제&lt;/h3&gt;

&lt;p&gt;아래 명령어로 차단된 IP를 수동으로 차단 해제할 수 있습니다.&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;fail2ban-client &lt;span class=&quot;nb&quot;&gt;set &lt;/span&gt;sshd unbanip &amp;lt;IP&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;ip-차단&quot;&gt;IP 차단&lt;/h3&gt;

&lt;p&gt;아래 명령어를 통해 수동으로 IP를 차단할 수 있습니다.&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;fail2ban-client &lt;span class=&quot;nb&quot;&gt;set &lt;/span&gt;sshd banip &amp;lt;IP&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;blockquote&gt;
  &lt;p&gt;이렇게 SSH 보안을 강화하는 fail2ban을 설치해 보았습니다.&lt;/p&gt;

  &lt;p&gt;이제 공격에 완벽히 안전한 것은 아니지만 전세계에서 들어오는 브루투포스 공격을 어느 정도 막아낼 수 있게 되었습니다.&lt;/p&gt;
&lt;/blockquote&gt;
</description>
        <pubDate>Sun, 24 Oct 2021 00:00:00 +0900</pubDate>
        <link>https://blog.ny64.kr/posts/setting-up-fail2ban-on-raspberry-pi/</link>
        <guid isPermaLink="true">https://blog.ny64.kr/posts/setting-up-fail2ban-on-raspberry-pi/</guid>
      </item>
    
      <item>
        <title>[RPI] Swap 설정하기</title>
        <description>&lt;p&gt;이번 포스트에서는 라즈베리파이에 Swap 설정을 해보겠습니다.&lt;/p&gt;

&lt;h2 id=&quot;swap&quot;&gt;Swap?&lt;/h2&gt;

&lt;p&gt;메모리가 부족한 경우 메모리의 일부 내용을 디스크로 Swap 하는 것을 말합니다.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Windows&lt;/strong&gt;의 가상 메모리와 같이 디스크 일부를 메모리처럼 사용하게 됩니다.&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h2 id=&quot;스왑-파일파티션-존재-여부-화인&quot;&gt;스왑 파일/파티션 존재 여부 화인&lt;/h2&gt;

&lt;p&gt;스왑 파일을 생성하기 전에 이미 스왑 파일이나 파티션이 있는지 먼저 확인합니다.&lt;/p&gt;

&lt;p&gt;아래 두 명령어를 입력했을때 &lt;strong&gt;Swap관련 내용&lt;/strong&gt;이 보이지 않으면 스왑이 설정되지 않은 것 입니다&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;free &lt;span class=&quot;nt&quot;&gt;-m&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;swapon &lt;span class=&quot;nt&quot;&gt;-s&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h2 id=&quot;스왑-파일-생성&quot;&gt;스왑 파일 생성&lt;/h2&gt;

&lt;p&gt;스왑 파일 및 파티션이 존재하지 않는 것을 확인한 뒤 아래 명령어로 스왑 용도로 사용할 파일을 생성합니다&lt;/p&gt;

&lt;p&gt;아래 명령어는 루트 디렉터리에 &lt;strong&gt;4GB&lt;/strong&gt;의 파일을 생성한다는 뜻입니다.&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;fallocate &lt;span class=&quot;nt&quot;&gt;-l&lt;/span&gt; 4G /swapfile
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;아래와 같이 &lt;strong&gt;4GB&lt;/strong&gt;의 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;swapfile&lt;/code&gt;이 생성된 것을 확인할 수 있습니다.&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;NY@RPI:~&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;ls&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-al&lt;/span&gt; /
total 4194532
...
drwxr-xr-x   9 root root       4096 Jul  3 20:24 snap
drwxr-xr-x   2 root root       4096 Feb  1 20:02 srv
&lt;span class=&quot;nt&quot;&gt;-rw-------&lt;/span&gt;   1 root root 4294967296 Jun  2 17:55 swapfile
dr-xr-xr-x  12 root root          0 Jan  1  1970 sys
...
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h2 id=&quot;스왑-활성화&quot;&gt;스왑 활성화&lt;/h2&gt;

&lt;p&gt;이제 생성한 파일을 스왑으로 동작하도록 설정해 줘야 합니다.&lt;/p&gt;

&lt;p&gt;생성된 파일의 권한을 수정합니다.&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nb&quot;&gt;sudo chmod &lt;/span&gt;600 /swapfile
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;해당 파일이 스왑으로 동작하도록 설정합니다.&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;mkswap /swapfile
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;마지막으로 아래 명령어를 입력해서 스왑을 활성화해줍니다.&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;swapon /swapfile
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;라즈베리파이를 재부팅 해도 계속 사용하기 위해서 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;/etc/fstab&lt;/code&gt;를 수정해 줍시다.&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;nano /etc/fstab
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;그리고 제일 하단에 아래와 같이 한 줄을 추가합니다.&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;/swapfile swap swap defaults 0 0
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h2 id=&quot;스왑-파일-삭제&quot;&gt;스왑 파일 삭제&lt;/h2&gt;

&lt;p&gt;스왑 파일은 삭제하려면, 아래 명령어로 먼저 스왑을 비활성화합니다.&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;swapoff &lt;span class=&quot;nt&quot;&gt;-v&lt;/span&gt; /swapfile
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;스왑 파일을 생성할때 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;/etc/fstab&lt;/code&gt;에 추가한 내용을 삭제합니다.&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;nano /etc/fstab
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;아래의 라인을 삭제해줍니다.&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;/swapfile swap swap defaults 0 0
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;마지막으로 생성했던 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;swapfile&lt;/code&gt;을 삭제해주면 됩니다.&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nb&quot;&gt;sudo rm&lt;/span&gt; /swapfile
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
</description>
        <pubDate>Sat, 24 Jul 2021 00:00:00 +0900</pubDate>
        <link>https://blog.ny64.kr/posts/setting-up-swap-on-raspberry-pi/</link>
        <guid isPermaLink="true">https://blog.ny64.kr/posts/setting-up-swap-on-raspberry-pi/</guid>
      </item>
    
      <item>
        <title>[RPI] Plex Media Server 설치하기</title>
        <description>&lt;p&gt;이번 포스트에서는 라즈베리파이에 미디어 서버를 구축해&lt;/p&gt;

&lt;p&gt;언제 어디서나 인터넷만 연결돼있으면 쉽고 편리하게 미디어를 감상할 수 있게 만들어 보겠습니다.&lt;/p&gt;

&lt;h2 id=&quot;plex-media-server&quot;&gt;Plex Media Server?&lt;/h2&gt;

&lt;p&gt;미디어 서버는 저장된 미디어를 스트리밍으로 볼 수 있게 해주는 서버입니다.&lt;/p&gt;

&lt;p&gt;라즈베리파이에 설치할 수 있는 미디어 서버는 다양하지만 오늘은 가장 인기 있고, 사용하기 편한 미디어 서버 중 하나인 &lt;strong&gt;플렉스 미디어 서버&lt;/strong&gt;를 설치해볼 예정입니다&lt;/p&gt;

&lt;p&gt;FHD로 원활하게 영상을 스트리밍하기 위해서는 라즈베리파이4 이상을 권장합니다.&lt;/p&gt;

&lt;h2 id=&quot;설치하기&quot;&gt;설치하기&lt;/h2&gt;

&lt;p&gt;일단 업데이트/업그레이드 부터!&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;apt-get update
&lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;apt-get upgrade
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;br /&gt;
&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Repository&lt;/code&gt;를 추가합니다.&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;apt-get &lt;span class=&quot;nb&quot;&gt;install &lt;/span&gt;apt-transport-https

curl https://downloads.plex.tv/plex-keys/PlexSign.key | &lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;apt-key add -

&lt;span class=&quot;nb&quot;&gt;echo &lt;/span&gt;deb https://downloads.plex.tv/repo/deb public main | &lt;span class=&quot;nb&quot;&gt;sudo tee&lt;/span&gt; /etc/apt/sources.list.d/plexmediaserver.list
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;br /&gt;
&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Repository list&lt;/code&gt;를 업데이트하고, Plex Media Server를 설치합니다.&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;apt-get update

&lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;apt-get &lt;span class=&quot;nb&quot;&gt;install &lt;/span&gt;plexmediaserver &lt;span class=&quot;nt&quot;&gt;-y&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;br /&gt;
만약 이런 경고가 나온다면, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;systemctl daemon-reload&lt;/code&gt;를 실행해 줍시다.&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;Warning: The unit file, source configuration file or drop-ins of plexmediaserver.
service changed on disk. Run 'systemctl daemon-reload' to reload units.
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h2 id=&quot;접속하기&quot;&gt;접속하기&lt;/h2&gt;

&lt;p&gt;설치가 성공적으로 완료되었다면, 이제 접속해볼까요?&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;ifconfig&lt;/code&gt;등으로 라즈베리파이의 IP주소를 확인한 뒤 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;http://IP:32400/web&lt;/code&gt;으로 접속합니다.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://blog.ny64.kr/assets/images/2021-07-22-installing-plex-media-server-on-raspberry-pi/plex-login-page.png&quot; alt=&quot;플렉스 미디어 서버 로그인 페이지&quot; width=&quot;60%&quot; /&gt;&lt;/p&gt;

&lt;p&gt;이런 화면이 나오면 성공입니다.&lt;/p&gt;

&lt;p&gt;위와 같이 &lt;strong&gt;구글, 페이스북, 애플 계정&lt;/strong&gt;으로 연동하셔도 되고, 아니면 밑에 &lt;strong&gt;sign up with email&lt;/strong&gt;을 눌러 회원가입을 하셔도 됩니다.&lt;/p&gt;

&lt;p&gt;로그인해보면 해보면 아래와 같은 화면이 뜹니다.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://blog.ny64.kr/assets/images/2021-07-22-installing-plex-media-server-on-raspberry-pi/plex-main-page.png&quot; alt=&quot;플렉스 미디어 서버 메인 페이지&quot; width=&quot;100%&quot; /&gt;&lt;/p&gt;

&lt;p&gt;여기 나오는 &lt;strong&gt;영화, 뉴스, 팟캐스트&lt;/strong&gt; 등은 플렉스에서 기본으로 제공 해주는 미디어 들입니다.&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h2 id=&quot;usb마운트&quot;&gt;USB마운트&lt;/h2&gt;

&lt;p&gt;&lt;img src=&quot;https://blog.ny64.kr/assets/images/2021-07-22-installing-plex-media-server-on-raspberry-pi/raspberrypi.jpg&quot; alt=&quot;라즈베레파이&quot; width=&quot;45%&quot; /&gt;&lt;/p&gt;

&lt;p&gt;리눅스에서는 USB를 연결하면 바로 사용할 수 있는게 아니라 직접 사용하고 싶은 폴더에 마운트 해줘야 합니다.&lt;/p&gt;

&lt;p&gt;USB를 연결하고,
&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;fdisk&lt;/code&gt;명령어로 파티션 목록을 확인합니다.&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;fdisk &lt;span class=&quot;nt&quot;&gt;-l&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;제일 아래 줄을 보면 64GB USB가 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;/dev/sda1&lt;/code&gt;에 할당되어 있다는 것을 확인 할 수 있습니다.&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;Device     Boot Start       End   Sectors  Size Id Type
/dev/sda1        2048 120174591 120172544 57.3G  7 HPFS/NTFS/exFAT
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;USB를 마운트 하기 위해서는 마운트를 할 폴더를 하나 만들어야 합니다.&lt;/p&gt;

&lt;p&gt;폴더의 위치와 이름은 상관없지만, 저는 편의를 위해서 루트 폴더에 &lt;strong&gt;plex&lt;/strong&gt;라는 폴더를 만들겠습니다.&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nb&quot;&gt;sudo mkdir&lt;/span&gt; /plex
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;이제 이 폴더에 USB를 마운트하기 위해 아래와 같이 입력합니다.&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;mount &lt;span class=&quot;nt&quot;&gt;-t&lt;/span&gt; auto /dev/sda1 /plex
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;만약 이렇게 했는데 USB의 파일시스템이 NTFS라서 오류가 날 경우 아래와 같이 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;ntfs-3g&lt;/code&gt;패키지를 설치한 다음 마운트해주면 됩니다.&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;apt-get &lt;span class=&quot;nb&quot;&gt;install &lt;/span&gt;ntfs-3g
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;라즈베리파이를 재부팅 해도 자동으로 USB가 마운트 되도록 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;/etc/fstab&lt;/code&gt;를 수정해 줍시다.&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;nano /etc/fstab
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;그리고 제일 하단에 아래와 같이 한 줄을 추가합니다.&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;/dev/sda1 /plex auto defaults 0 0
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;그럼 아래와 같이 마운트한 폴더에 영화들이 잘 나오는 것을 확인할 수 있습니다.&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;NY@RPI:~&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;ls&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-al&lt;/span&gt; /plex/
total 1156
drwxr-xr-x 10 root root 131072 Jul 19 20:10  &lt;span class=&quot;nb&quot;&gt;.&lt;/span&gt;
drwxr-xr-x 22 root root   4096 Jul  1 19:31  ..
drwxr-xr-x  7 root root 131072 May 29 11:15 &lt;span class=&quot;s1&quot;&gt;'Animated Film'&lt;/span&gt;
drwxr-xr-x  2 root root 131072 May 29 04:10  Animation
drwxr-xr-x  5 root root 131072 May 29 11:15 &lt;span class=&quot;s1&quot;&gt;'Ghibli Movies'&lt;/span&gt;
drwxr-xr-x 11 root root 131072 Jun 12 21:37  Movies
drwxr-xr-x  3 root root 131072 May 29 11:38 &lt;span class=&quot;s1&quot;&gt;'TV Shows'&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h2 id=&quot;plex-설정하기&quot;&gt;Plex 설정하기&lt;/h2&gt;

&lt;p&gt;이제 다시 브라우저로 돌아와 마운트한 USB를 라이브러리로 추가해 줍시다.&lt;/p&gt;

&lt;p&gt;왼쪽 위 메뉴에서 &lt;strong&gt;더보기&lt;/strong&gt;를 클릭한 후
&lt;img src=&quot;https://blog.ny64.kr/assets/images/2021-07-22-installing-plex-media-server-on-raspberry-pi/plex-setting-1.png&quot; alt=&quot;플렉스 미디어 서버 설정-1&quot; width=&quot;40%&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;플러스 버튼&lt;/strong&gt;을 클릭
&lt;img src=&quot;https://blog.ny64.kr/assets/images/2021-07-22-installing-plex-media-server-on-raspberry-pi/plex-setting-2.png&quot; alt=&quot;플렉스 미디어 서버 설정-2&quot; width=&quot;40%&quot; /&gt;&lt;/p&gt;

&lt;p&gt;라이브러리 추가 창에서 원하는 &lt;strong&gt;유형, 언어, 이름&lt;/strong&gt;을 설정하고 &lt;strong&gt;폴더추가 버튼&lt;/strong&gt;을 누릅니다.
&lt;img src=&quot;https://blog.ny64.kr/assets/images/2021-07-22-installing-plex-media-server-on-raspberry-pi/plex-setting-3.png&quot; alt=&quot;플렉스 미디어 서버 설정-3&quot; width=&quot;80%&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;미디어 폴더 찾아보기&lt;/strong&gt;를 클릭한 다음
&lt;img src=&quot;https://blog.ny64.kr/assets/images/2021-07-22-installing-plex-media-server-on-raspberry-pi/plex-setting-4.png&quot; alt=&quot;플렉스 미디어 서버 설정-4&quot; width=&quot;80%&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;원하는 폴더(마운트한 폴더)&lt;/strong&gt;를 선택하고
&lt;img src=&quot;https://blog.ny64.kr/assets/images/2021-07-22-installing-plex-media-server-on-raspberry-pi/plex-setting-5.png&quot; alt=&quot;플렉스 미디어 서버 설정-5&quot; width=&quot;80%&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;라이브러리 추가&lt;/strong&gt;를 클릭해 라이브러리에 추가합니다.
&lt;img src=&quot;https://blog.ny64.kr/assets/images/2021-07-22-installing-plex-media-server-on-raspberry-pi/plex-setting-6.png&quot; alt=&quot;플렉스 미디어 서버 설정-6&quot; width=&quot;80%&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;그럼 아래 사진처럼 USB안에 있었던 영화들이 정리되어 표시되는걸 확인할 수 있습니다.
&lt;img src=&quot;https://blog.ny64.kr/assets/images/2021-07-22-installing-plex-media-server-on-raspberry-pi/plex-main-page after-setup.png&quot; alt=&quot;설정 후 플렉스 미디어 서버 메인 페이지&quot; width=&quot;100%&quot; /&gt;&lt;/p&gt;

&lt;hr /&gt;

&lt;blockquote&gt;
  &lt;p&gt;플렉스를 미디어 서버로 활용할 때의 큰 강점은 미디어 서버를 구축해 놓은 뒤에 친구나 가족들과 자신이 가진 미디어를 공유할 수 있다는 점입니다.&lt;/p&gt;

  &lt;p&gt;또 다른 강점은 클라이언트 프로그램이 다양한 플랫폼에서 지원된다는 점입니다. 데스크톱은 물론이고 안드로이드를 사용한 TV나 핸드폰 등에서도 인터넷만 가능하다면 영상을 어디서나 시청 할 수 있습니다.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;strong&gt;플렉스&lt;/strong&gt;에 대한 더 자세한 사용법은 &lt;strong&gt;&lt;a href=&quot;https://www.plex.tv/&quot;&gt;여기&lt;/a&gt;&lt;/strong&gt;를 참고하시길 바랍니다.&lt;/p&gt;
</description>
        <pubDate>Thu, 22 Jul 2021 00:00:00 +0900</pubDate>
        <link>https://blog.ny64.kr/posts/installing-plex-media-server-on-raspberry-pi/</link>
        <guid isPermaLink="true">https://blog.ny64.kr/posts/installing-plex-media-server-on-raspberry-pi/</guid>
      </item>
    
  </channel>
</rss>
